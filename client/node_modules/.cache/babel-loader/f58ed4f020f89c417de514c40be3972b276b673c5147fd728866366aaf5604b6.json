{"ast":null,"code":"var _jsxFileName = \"/Users/yonasmesfine/Desktop/transfer/Outside projects/Playlist_Creator/client/src/Components/AllSongs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AllSongs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('dotenv').config();\nconst CLIENT_ID = 'c031b59053244888533b3b23cbf70de';\nconst REDIRECT_URI = 'http://localhost:3000';\nconst AllSongs = ({\n  playlistId\n}) => {\n  _s();\n  const [token, setToken] = useState('');\n  const [playlistItems, setPlaylistItems] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem('token');\n    if (!token && hash) {\n      token = hash.substring(1).split('&').find(elem => elem.startsWith('access_token')).split('=')[1];\n      window.location.hash = '';\n      window.localStorage.setItem('token', token);\n    }\n    setToken(token);\n    if (token && playlistId) {\n      getPlaylistItems(token, playlistId);\n    }\n  }, [token, playlistId]);\n  const getPlaylistItems = async (token, playlistId) => {\n    const url = `https://api.spotify.com/v1/playlists/${playlistId}/tracks?market=US`;\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPlaylistItems(data.items || []);\n      setError(null);\n      window.localStorage.setItem('playlistItems', JSON.stringify(data.items));\n    } catch (error) {\n      console.error('Error fetching playlist items:', error);\n      setError('Failed to fetch playlist items. Please log in again.');\n    }\n  };\n  const loginToSpotify = () => {\n    const authUrl = `https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&response_type=token&redirect_uri=${REDIRECT_URI}&scope=playlist-read-private`;\n    window.location.href = authUrl;\n  };\n  const handleLoginAgain = () => {\n    // Clear the existing token and redirect to the Spotify login page\n    window.localStorage.removeItem('token');\n    loginToSpotify();\n  };\n  const createYouTubeQueue = async () => {\n    if (!token || localStorage.length === 0) {\n      alert('No link was entered or no playlist items found. Please ensure you are logged in and have valid data.');\n      return;\n    }\n    const playlistItems = JSON.parse(window.localStorage.getItem('playlistItems'));\n    if (playlistItems && playlistItems.length > 0) {\n      try {\n        const response = await fetch('http://localhost:5000/api/create_youtube_queue', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            playlist_title: 'My Playlist Title',\n            playlist_description: 'This is a description of my playlist',\n            songs: playlistItems.map(item => ({\n              name: item.track.name,\n              artist: item.track.artists[0].name\n            }))\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log(data.message);\n      } catch (error) {\n        console.error('Error creating YouTube queue:', error);\n      }\n    } else {\n      console.error('No playlist items found in localStorage');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Create_queue\",\n      onClick: createYouTubeQueue,\n      children: \"Create YouTube Queue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Create_queue\",\n      onClick: () => window.open('https://accounts.spotify.com/en/login?flow_ctx=ebcf10ec-62e5-440d-aa00-88bf74304f13:1723170857'),\n      children: \"Login to Your Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"playlist\",\n      children: \"Spotify Playlist Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), !token && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loginToSpotify,\n      children: \"Login to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 18\n    }, this), error && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoginAgain,\n      children: \"Log In Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this), token && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: playlistItems.length > 0 ? playlistItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Songs\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.track.album.images[0].url,\n          alt: item.track.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SongInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.track.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: item.track.artists[0].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No items found in the playlist.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(AllSongs, \"SaKEU1M1yu4mVyhR1lqzy91eJ2o=\");\n_c = AllSongs;\nexport default AllSongs;\nvar _c;\n$RefreshReg$(_c, \"AllSongs\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","require","config","CLIENT_ID","REDIRECT_URI","AllSongs","playlistId","_s","token","setToken","playlistItems","setPlaylistItems","error","setError","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","getPlaylistItems","url","response","fetch","headers","Authorization","ok","Error","data","json","items","JSON","stringify","console","loginToSpotify","authUrl","href","handleLoginAgain","removeItem","createYouTubeQueue","length","alert","parse","method","body","playlist_title","playlist_description","songs","map","item","name","track","artist","artists","log","message","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","open","index","src","album","images","alt","_c","$RefreshReg$"],"sources":["/Users/yonasmesfine/Desktop/transfer/Outside projects/Playlist_Creator/client/src/Components/AllSongs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './AllSongs.css';\r\nrequire ('dotenv').config();\r\n\r\nconst CLIENT_ID = 'c031b59053244888533b3b23cbf70de';\r\nconst REDIRECT_URI = 'http://localhost:3000';\r\n\r\nconst AllSongs = ({ playlistId }) => {\r\n  const [token, setToken] = useState('');\r\n  const [playlistItems, setPlaylistItems] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const hash = window.location.hash;\r\n    let token = window.localStorage.getItem('token');\r\n\r\n    if (!token && hash) {\r\n      token = hash.substring(1).split('&').find(elem => elem.startsWith('access_token')).split('=')[1];\r\n      window.location.hash = '';\r\n      window.localStorage.setItem('token', token);\r\n    }\r\n\r\n    setToken(token);\r\n\r\n    if (token && playlistId) {\r\n      getPlaylistItems(token, playlistId);\r\n    }\r\n  }, [token, playlistId]);\r\n\r\n  const getPlaylistItems = async (token, playlistId) => {\r\n    const url = `https://api.spotify.com/v1/playlists/${playlistId}/tracks?market=US`;\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setPlaylistItems(data.items || []);\r\n      setError(null); \r\n      window.localStorage.setItem('playlistItems', JSON.stringify(data.items));\r\n    } catch (error) {\r\n      console.error('Error fetching playlist items:', error);\r\n      setError('Failed to fetch playlist items. Please log in again.');\r\n    }\r\n  };\r\n\r\n  const loginToSpotify = () => {\r\n    const authUrl = `https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&response_type=token&redirect_uri=${REDIRECT_URI}&scope=playlist-read-private`;\r\n    window.location.href = authUrl;\r\n  };\r\n\r\n  const handleLoginAgain = () => {\r\n    // Clear the existing token and redirect to the Spotify login page\r\n    window.localStorage.removeItem('token');\r\n    loginToSpotify();\r\n  };\r\n\r\n  const createYouTubeQueue = async () => {\r\n    if(!token || localStorage.length === 0){\r\n      alert('No link was entered or no playlist items found. Please ensure you are logged in and have valid data.');\r\n      return;\r\n    }\r\n    const playlistItems = JSON.parse(window.localStorage.getItem('playlistItems'));\r\n    if (playlistItems && playlistItems.length > 0) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/create_youtube_queue', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            playlist_title: 'My Playlist Title',\r\n            playlist_description: 'This is a description of my playlist',\r\n            songs: playlistItems.map(item => ({\r\n              name: item.track.name,\r\n              artist: item.track.artists[0].name\r\n            }))\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(data.message);\r\n      } catch (error) {\r\n        console.error('Error creating YouTube queue:', error);\r\n      }\r\n    } else {\r\n      console.error('No playlist items found in localStorage');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className='card'>\r\n      <button className='Create_queue' onClick={createYouTubeQueue}>Create YouTube Queue</button>\r\n      <button \r\n  className='Create_queue' \r\n  onClick={() => window.open('https://accounts.spotify.com/en/login?flow_ctx=ebcf10ec-62e5-440d-aa00-88bf74304f13:1723170857')}\r\n>\r\n  Login to Your Spotify\r\n</button>\r\n      <h1 className='playlist'>Spotify Playlist Songs</h1>\r\n      {!token && <button onClick={loginToSpotify}>Login to Spotify</button>}\r\n      {error && <button onClick={handleLoginAgain}>Log In Again</button>}\r\n      {token && (\r\n        <div>\r\n          {playlistItems.length > 0 ? (\r\n            playlistItems.map((item, index) => (\r\n              <div key={index} className='Songs'>\r\n                <img src={item.track.album.images[0].url} alt={item.track.name} />\r\n                <div className='SongInfo'>\r\n                  <h2>{item.track.name}</h2>\r\n                  <h4>{item.track.artists[0].name}</h4>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No items found in the playlist.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllSongs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}